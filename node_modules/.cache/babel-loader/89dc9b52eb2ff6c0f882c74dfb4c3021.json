{"ast":null,"code":"var _jsxFileName = \"/Users/erik.salsborn/Development/multistream/frontend/multistream/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setUserSession } from \"./AuthService\";\nimport axios from \"axios\"; // url to the login lambda function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginUrl = \"https://hie7efmkul.execute-api.eu-north-1.amazonaws.com/prod/login\"; // this component acts as a way for the user to login via Forms\n\nconst Login = () => {\n  _s();\n\n  document.body.style.backgroundColor = \"#D2D6E6\"; // declaring new state variables for user input and message\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(null); // when logged in we want to send the user to another component\n  // we are using useNavigate for this\n\n  const navigate = useNavigate(); // this function is called when submitting the form\n\n  const submitHandler = event => {\n    event.preventDefault(); // making sure no fields are empty\n\n    if (username.trim() === \"\" || password.trim() === \"\") {\n      setMessage(\"All fields are required\");\n      return;\n    } // required for call to server\n\n\n    const requestConfig = {\n      headers: {\n        \"x-api-key\": \"1fJBeucWw45uBdz97bK4t3iio2gHgdjIaR3d9Lmy\"\n      }\n    }; // information backend needs for login\n\n    const requestBody = {\n      username: username,\n      password: password\n    }; // using axios to send asynchronous HTTP requests to REST endpoints\n\n    axios.post(loginUrl, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      setMessage(\"Login Successful\");\n      navigate(\"/layouts\");\n    }).catch(error => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage(\"Sorry... The backend server is down. Please try again later.\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"split\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"centerimage\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"pngwing.png\",\n        width: \"400\",\n        height: \"400\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"centertop\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: username,\n                onChange: event => setUsername(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: event => setPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Login\",\n              id: \"submit-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: [message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"Har du inget konto?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            \"data-testid\": \"sign-up-link\",\n            href: \"/register\",\n            tabindex: \"0\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Registrera dig\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"PkDLHdJnl56LDS7VB40vM9Hf380=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/erik.salsborn/Development/multistream/frontend/multistream/src/Login.js"],"names":["React","useState","useNavigate","setUserSession","axios","loginUrl","Login","document","body","style","backgroundColor","username","setUsername","password","setPassword","message","setMessage","navigate","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","data","user","token","catch","error","status","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { setUserSession } from \"./AuthService\"\nimport axios from \"axios\"\n\n// url to the login lambda function\nconst loginUrl = \"https://hie7efmkul.execute-api.eu-north-1.amazonaws.com/prod/login\"\n\n// this component acts as a way for the user to login via Forms\nconst Login = () => {\n    document.body.style.backgroundColor = \"#D2D6E6\"\n\n    // declaring new state variables for user input and message\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [message, setMessage] = useState(null)\n\n    // when logged in we want to send the user to another component\n    // we are using useNavigate for this\n    const navigate = useNavigate()\n\n    // this function is called when submitting the form\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        // making sure no fields are empty\n        if (username.trim() === \"\" || password.trim() === \"\") {\n            setMessage(\"All fields are required\")\n            return\n        }\n\n        // required for call to server\n        const requestConfig = {\n            headers: {\n                \"x-api-key\": \"1fJBeucWw45uBdz97bK4t3iio2gHgdjIaR3d9Lmy\",\n            },\n        }\n\n        // information backend needs for login\n        const requestBody = {\n            username: username,\n            password: password,\n        }\n\n        // using axios to send asynchronous HTTP requests to REST endpoints\n        axios\n            .post(loginUrl, requestBody, requestConfig)\n            .then((response) => {\n                setUserSession(response.data.user, response.data.token)\n                setMessage(\"Login Successful\")\n                navigate(\"/layouts\")\n            })\n            .catch((error) => {\n                if (error.response.status === 401 || error.response.status === 403) {\n                    setMessage(error.response.data.message)\n                } else {\n                    setMessage(\"Sorry... The backend server is down. Please try again later.\")\n                }\n            })\n    }\n\n    return (\n        <div class=\"split\">\n            <div class=\"centerimage\">\n                <img src=\"pngwing.png\" width=\"400\" height=\"400\" alt=\"logo\"></img>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"centertop\">\n                    <form onSubmit={submitHandler}>\n                        <h5>Login</h5>\n\n                        <div>\n                            <div>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    value={username}\n                                    onChange={(event) => setUsername(event.target.value)}\n                                />{\" \"}\n                                <br />\n                            </div>\n\n                            <div>\n                                <input\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={(event) => setPassword(event.target.value)}\n                                />{\" \"}\n                                <br />\n                            </div>\n                        </div>\n\n                        <div>\n                            <input type=\"submit\" value=\"Login\" id=\"submit-button\" />\n                        </div>\n                    </form>\n                    {message && <p className=\"message\">{message} </p>}\n                </div>\n\n                <div class=\"center\">\n                    <p>\n                        {\" \"}\n                        Har du inget konto?{\" \"}\n                        <a data-testid=\"sign-up-link\" href=\"/register\" tabindex=\"0\">\n                            <span>Registrera dig</span>\n                        </a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}