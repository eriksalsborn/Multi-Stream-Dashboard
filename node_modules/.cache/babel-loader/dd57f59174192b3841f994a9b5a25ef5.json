{"ast":null,"code":"var _jsxFileName = \"/Users/erik.salsborn/Development/multistream/frontend/multistream/src/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport { getToken } from \"./AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = () => {\n  _s();\n\n  let token = getToken();\n  let location = useLocation();\n\n  if (!token) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/erik.salsborn/Development/multistream/frontend/multistream/src/PrivateRoute.js"],"names":["useLocation","Navigate","Outlet","getToken","PrivateRoute","token","location","from"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,MAAIC,KAAK,GAAGF,QAAQ,EAApB;AACA,MAAIG,QAAQ,GAAGN,WAAW,EAA1B;;AAEA,MAAI,CAACK,KAAL,EAAY;AACR;AACA;AACA;AACA;AAEA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEE,QAAAA,IAAI,EAAED;AAAR;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAdD;;GAAMF,Y;UAEaJ,W;;;KAFbI,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import { useLocation, Navigate, Outlet } from \"react-router-dom\"\nimport { getToken } from \"./AuthService\"\n\nconst PrivateRoute = () => {\n    let token = getToken()\n    let location = useLocation()\n\n    if (!token) {\n        // Redirect them to the /login page, but save the current location they were\n        // trying to go to when they were redirected. This allows us to send them\n        // along to that page after they login, which is a nicer user experience\n        // than dropping them off on the home page.\n\n        return <Navigate to=\"/login\" state={{ from: location }} />\n    }\n\n    return <Outlet />\n}\n\nexport default PrivateRoute\n"]},"metadata":{},"sourceType":"module"}