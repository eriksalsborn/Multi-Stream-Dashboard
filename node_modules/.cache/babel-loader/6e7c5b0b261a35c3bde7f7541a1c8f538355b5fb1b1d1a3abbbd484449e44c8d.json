{"ast":null,"code":"var _jsxFileName = \"/Users/erik.salsborn/Development/multi-stream/frontend/multistream/src/Layouts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUser, getToken, resetUserSession } from \"./AuthService\";\nimport axios from \"axios\";\nimport CreateWindow from \"./CreateWindow\";\nimport { slide as Menu } from \"react-burger-menu\";\n\n// allows us to access the api\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst saveLayoutsUrl = \"https://hie7efmkul.execute-api.eu-north-1.amazonaws.com/prod/savelayouts\";\nconst getLayoutsUrl = \"https://hie7efmkul.execute-api.eu-north-1.amazonaws.com/prod/getlayouts\";\nconst Layouts = () => {\n  _s();\n  // declaring new state variables\n  const [windows, setWindows] = useState([]); // windows contains information about each streaming window - url, size etc..\n  const [appInitiated, setAppInitiated] = useState(false); // used for keeping track if we should GET or SAVE windows\n  const [inputText, setInputText] = useState(\"\"); // used in forms\n  const [message, setMessage] = useState(null); // used for error messages\n  const [currentLayout, setCurrentLayout] = useState(\"\"); //  used for keeping information about the layout of windows\n  const [darkmode, setDarkmode] = useState(false); // used for keeping track if we are using dark mode or not\n\n  let navigate = useNavigate();\n  const logoutHandler = () => {\n    resetUserSession();\n    navigate(\"/login\");\n  };\n  const darkMode = () => {\n    const darkorlight = document.getElementById(\"darkmode_button\");\n    if (darkmode === false) {\n      document.body.style.backgroundColor = \"#000033\";\n      darkorlight.value = \"Light Mode\";\n      setDarkmode(true);\n    } else {\n      document.body.style.backgroundColor = \"#D2D6E6\";\n      darkorlight.value = \"Dark Mode\";\n      setDarkmode(false);\n    }\n  };\n  const hideFormYT = () => {\n    const form = document.getElementById(\"form\");\n    const formtwitch = document.getElementById(\"formtwitch\");\n    const forminput = document.getElementById(\"forminput\");\n    const formtwitchinput = document.getElementById(\"formtwitchinput\");\n    if (form.style.display === \"none\") {\n      form.style.display = \"block\";\n      if (formtwitch.style.display === \"block\") {\n        formtwitch.style.display = \"none\";\n      }\n    } else {\n      form.style.display = \"none\";\n    }\n    forminput.value = \"\";\n    formtwitchinput.value = \"\";\n  };\n  const hideFormTW = () => {\n    const form = document.getElementById(\"form\");\n    const formtwitch = document.getElementById(\"formtwitch\");\n    const forminput = document.getElementById(\"forminput\");\n    const formtwitchinput = document.getElementById(\"formtwitchinput\");\n    if (formtwitch.style.display === \"none\") {\n      formtwitch.style.display = \"block\";\n      if (form.style.display === \"block\") {\n        form.style.display = \"none\";\n      }\n    } else {\n      formtwitch.style.display = \"none\";\n    }\n    forminput.value = \"\";\n    formtwitchinput.value = \"\";\n  };\n  const hideLayoutDropdown = () => {\n    const dropdown = document.getElementById(\"dropdown_switch\");\n    if (dropdown.style.display === \"none\") {\n      dropdown.style.display = \"block\";\n    } else {\n      dropdown.style.display = \"none\";\n    }\n  };\n  const addLayoutPrompt = () => {\n    const dropdown = document.getElementById(\"dropdown_switch\");\n    let sign = prompt(\"What do you want your new layout to be called?\");\n    dropdown.style.display = \"none\";\n    if (sign === null || sign === \"\") {\n      return;\n    }\n    setCurrentLayout(sign);\n  };\n  const submitHandlerYT = event => {\n    event.preventDefault();\n    if (inputText.trim() === \"\") {\n      setMessage(\"All fields are required\");\n      return;\n    }\n    let channel_name = inputText;\n    channel_name = channel_name.substr(32);\n    const src = \"https://www.youtube.com/embed/\" + channel_name;\n    const newState = [...windows, {\n      url: src,\n      width: 407,\n      height: 228,\n      x: 100,\n      y: 100,\n      scale: 1.0,\n      layout: currentLayout\n    }];\n    hideFormYT();\n    setInputText(\"\");\n    setWindows(newState);\n  };\n  const submitHandlerTW = event => {\n    event.preventDefault();\n    if (inputText.trim() === \"\") {\n      setMessage(\"All fields are required\");\n      return;\n    }\n    let channel_name = inputText;\n    const src = \"https://player.twitch.tv/?channel=\" + channel_name + \"&parent=localhost&muted=true\";\n    const newState = [...windows, {\n      url: src,\n      width: 407,\n      height: 228,\n      x: 100,\n      y: 100,\n      scale: 1.0,\n      layout: currentLayout\n    }];\n    hideFormTW();\n    setInputText(\"\");\n    setWindows(newState);\n  };\n  const handleClose = toClose => {\n    setWindows(windows.filter(a => a.url !== toClose.url));\n  };\n  const handleDrag = (toDrag, dx, dy) => {\n    toDrag.x = dx;\n    toDrag.y = dy;\n    setWindows(windows.map(a => a.url !== toDrag.url ? a : toDrag));\n  };\n  const handleResize = (toResize, width, height, position) => {\n    toResize.height = height;\n    toResize.width = width;\n    toResize.x = position.x;\n    toResize.y = position.y;\n    setWindows(windows.map(a => a.url !== toResize.url ? a : toResize));\n  };\n  const addYTStream = () => {\n    const dropdown = document.getElementById(\"dropdown_switch\");\n    let sign = prompt(\"Please enter the Youtube URL?\");\n    dropdown.style.display = \"none\";\n    if (sign === null || sign === \"\") {\n      return;\n    }\n  };\n  const windowNames = windows.map(i => i.layout);\n  const unique = new Array(...new Set([...windowNames]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      right: true,\n      noOverlay: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \" Welcome \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \" Add a stream \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"border\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          src: \"youtube_logo.png\",\n          height: \"68\",\n          onClick: hideFormYT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        onSubmit: submitHandlerYT,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"forminput\",\n          type: \"text\",\n          placeholder: \"YouTube URL\",\n          value: inputText,\n          onChange: event => {\n            setInputText(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"button-overlay-green\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"border\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          src: \"twitch_logo.png\",\n          height: \"78\",\n          onClick: hideFormTW\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"formtwitch\",\n        onSubmit: submitHandlerTW,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"formtwitchinput\",\n          type: \"text\",\n          placeholder: \"Twitch Channel Name\",\n          value: inputText,\n          onChange: event => {\n            setInputText(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"button-overlay-green\",\n          type: \"submit\",\n          value: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"button-overlay\",\n        type: \"button\",\n        value: \"Switch Layout\",\n        onClick: hideLayoutDropdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"dropdown_switch\",\n        value: currentLayout,\n        onChange: e => setCurrentLayout(e.target.value),\n        children: unique.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"button-overlay\",\n        type: \"button\",\n        value: \"Add New Layout\",\n        onClick: addLayoutPrompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"darkmode_button\",\n        type: \"button\",\n        value: \"Dark Mode\",\n        onClick: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"button-overlay\",\n        type: \"button\",\n        value: \"Logout\",\n        onClick: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), windows.map(windows => /*#__PURE__*/_jsxDEV(CreateWindow, {\n      data: windows,\n      layout: currentLayout,\n      onDrag: handleDrag,\n      onClose: handleClose,\n      onResize: handleResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this)), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: [message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n};\n_s(Layouts, \"6OFeBDAv9Ppmah9UIit2lCsDMAs=\", false, function () {\n  return [useNavigate];\n});\n_c = Layouts;\nexport default Layouts;\nvar _c;\n$RefreshReg$(_c, \"Layouts\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUser","getToken","resetUserSession","axios","CreateWindow","slide","Menu","jsxDEV","_jsxDEV","saveLayoutsUrl","getLayoutsUrl","Layouts","_s","windows","setWindows","appInitiated","setAppInitiated","inputText","setInputText","message","setMessage","currentLayout","setCurrentLayout","darkmode","setDarkmode","navigate","logoutHandler","darkMode","darkorlight","document","getElementById","body","style","backgroundColor","value","hideFormYT","form","formtwitch","forminput","formtwitchinput","display","hideFormTW","hideLayoutDropdown","dropdown","addLayoutPrompt","sign","prompt","submitHandlerYT","event","preventDefault","trim","channel_name","substr","src","newState","url","width","height","x","y","scale","layout","submitHandlerTW","handleClose","toClose","filter","a","handleDrag","toDrag","dx","dy","map","handleResize","toResize","position","addYTStream","windowNames","i","unique","Array","Set","children","right","noOverlay","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onClick","onSubmit","placeholder","onChange","target","e","data","onDrag","onClose","onResize","className","_c","$RefreshReg$"],"sources":["/Users/erik.salsborn/Development/multi-stream/frontend/multistream/src/Layouts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { getUser, getToken, resetUserSession } from \"./AuthService\"\nimport axios from \"axios\"\nimport CreateWindow from \"./CreateWindow\"\nimport { slide as Menu } from \"react-burger-menu\"\n\n// allows us to access the api\nconst saveLayoutsUrl = \"https://hie7efmkul.execute-api.eu-north-1.amazonaws.com/prod/savelayouts\"\nconst getLayoutsUrl = \"https://hie7efmkul.execute-api.eu-north-1.amazonaws.com/prod/getlayouts\"\n\nconst Layouts = () => {\n\n    // declaring new state variables\n    const [windows, setWindows] = useState([]) // windows contains information about each streaming window - url, size etc..\n    const [appInitiated, setAppInitiated] = useState(false) // used for keeping track if we should GET or SAVE windows\n    const [inputText, setInputText] = useState(\"\") // used in forms\n    const [message, setMessage] = useState(null) // used for error messages\n    const [currentLayout, setCurrentLayout] = useState(\"\") //  used for keeping information about the layout of windows\n    const [darkmode, setDarkmode] = useState(false) // used for keeping track if we are using dark mode or not\n\n    let navigate = useNavigate()\n    const logoutHandler = () => {\n        resetUserSession()\n        navigate(\"/login\")\n    }\n\n    const darkMode = () => {\n        const darkorlight = document.getElementById(\"darkmode_button\")\n\n        if (darkmode === false) {\n            document.body.style.backgroundColor = \"#000033\"\n            darkorlight.value = \"Light Mode\"\n            setDarkmode(true)\n        } else {\n            document.body.style.backgroundColor = \"#D2D6E6\"\n            darkorlight.value = \"Dark Mode\"\n            setDarkmode(false)\n        }\n    }\n\n    const hideFormYT = () => {\n        const form = document.getElementById(\"form\")\n        const formtwitch = document.getElementById(\"formtwitch\")\n        const forminput = document.getElementById(\"forminput\")\n        const formtwitchinput = document.getElementById(\"formtwitchinput\")\n\n        if (form.style.display === \"none\") {\n            form.style.display = \"block\"\n            if (formtwitch.style.display === \"block\") {\n                formtwitch.style.display = \"none\"\n            }\n        } else {\n            form.style.display = \"none\"\n        }\n\n        forminput.value = \"\"\n        formtwitchinput.value = \"\"\n    }\n\n    const hideFormTW = () => {\n        const form = document.getElementById(\"form\")\n        const formtwitch = document.getElementById(\"formtwitch\")\n        const forminput = document.getElementById(\"forminput\")\n        const formtwitchinput = document.getElementById(\"formtwitchinput\")\n\n        if (formtwitch.style.display === \"none\") {\n            formtwitch.style.display = \"block\"\n            if (form.style.display === \"block\") {\n                form.style.display = \"none\"\n            }\n        } else {\n            formtwitch.style.display = \"none\"\n        }\n\n        forminput.value = \"\"\n        formtwitchinput.value = \"\"\n    }\n\n    const hideLayoutDropdown = () => {\n        const dropdown = document.getElementById(\"dropdown_switch\")\n\n        if (dropdown.style.display === \"none\") {\n            dropdown.style.display = \"block\"\n        } else {\n            dropdown.style.display = \"none\"\n        }\n    }\n\n    const addLayoutPrompt = () => {\n        const dropdown = document.getElementById(\"dropdown_switch\")\n\n        let sign = prompt(\"What do you want your new layout to be called?\")\n        dropdown.style.display = \"none\"\n        \n        if (sign === null || sign === \"\") {\n            return\n        }\n\n        setCurrentLayout(sign)\n    }\n\n    const submitHandlerYT = (event) => {\n        event.preventDefault()\n\n        if (inputText.trim() === \"\") {\n            setMessage(\"All fields are required\")\n            return\n        }\n\n        let channel_name = inputText\n        channel_name = channel_name.substr(32)\n\n        const src = \"https://www.youtube.com/embed/\" + channel_name\n\n        const newState = [\n            ...windows,\n            {\n                url: src,\n                width: 407,\n                height: 228,\n                x: 100,\n                y: 100,\n                scale: 1.0,\n                layout: currentLayout,\n            },\n        ]\n\n        hideFormYT()\n        setInputText(\"\")\n        setWindows(newState)\n    }\n\n    const submitHandlerTW = (event) => {\n        event.preventDefault()\n\n        if (inputText.trim() === \"\") {\n            setMessage(\"All fields are required\")\n            return\n        }\n\n        let channel_name = inputText\n        const src = \"https://player.twitch.tv/?channel=\" + channel_name + \"&parent=localhost&muted=true\"\n\n        const newState = [\n            ...windows,\n            {\n                url: src,\n                width: 407,\n                height: 228,\n                x: 100,\n                y: 100,\n                scale: 1.0,\n                layout: currentLayout,\n            },\n        ]\n\n        hideFormTW()\n        setInputText(\"\")\n        setWindows(newState)\n    }\n\n    const handleClose = (toClose) => {\n        setWindows(windows.filter((a) => a.url !== toClose.url))\n    }\n\n    const handleDrag = (toDrag, dx, dy) => {\n        toDrag.x = dx\n        toDrag.y = dy\n        setWindows(windows.map((a) => (a.url !== toDrag.url ? a : toDrag)))\n    }\n\n    const handleResize = (toResize, width, height, position) => {\n        toResize.height = height\n        toResize.width = width\n        toResize.x = position.x\n        toResize.y = position.y\n\n        setWindows(windows.map((a) => (a.url !== toResize.url ? a : toResize)))\n    }\n\n    const addYTStream = () => {\n        const dropdown = document.getElementById(\"dropdown_switch\")\n\n        let sign = prompt(\"Please enter the Youtube URL?\")\n        dropdown.style.display = \"none\"\n        \n        if (sign === null || sign === \"\") {\n            return\n        }\n    }\n\n    const windowNames = windows.map((i) => i.layout)\n    const unique = new Array(...new Set([...windowNames]))\n\n    return (\n        <div>\n            <Menu right noOverlay>\n                <h5> Welcome </h5>\n                <h5> Add a stream </h5>\n\n                <div id=\"border\">\n                    <input type=\"image\" src=\"youtube_logo.png\" height=\"68\" onClick={hideFormYT} />\n                </div>\n\n                <form id=\"form\" onSubmit={submitHandlerYT}>\n                    <input\n                        id=\"forminput\"\n                        type=\"text\"\n                        placeholder=\"YouTube URL\"\n                        value={inputText}\n                        onChange={(event) => {\n                            setInputText(event.target.value)\n                        }}\n                    />{\" \"}\n                    <input id=\"button-overlay-green\" type=\"submit\" value=\"Add\" />\n                </form>\n\n                <div id=\"border\">\n                    <input type=\"image\" src=\"twitch_logo.png\" height=\"78\" onClick={hideFormTW} />\n                </div>\n\n                <form id=\"formtwitch\" onSubmit={submitHandlerTW}>\n                    <input\n                        id=\"formtwitchinput\"\n                        type=\"text\"\n                        placeholder=\"Twitch Channel Name\"\n                        value={inputText}\n                        onChange={(event) => {\n                            setInputText(event.target.value)\n                        }}\n                    />{\" \"}\n                    <br />\n                    <input id=\"button-overlay-green\" type=\"submit\" value=\"Add\" />\n                </form>\n\n                <input id=\"button-overlay\" type=\"button\" value=\"Switch Layout\" onClick={hideLayoutDropdown} />\n                <select id=\"dropdown_switch\" value={currentLayout} onChange={(e) => setCurrentLayout(e.target.value)}>\n                    {unique.map((i) => (\n                        <option>{i}</option>\n                    ))}\n                </select>\n\n                <input id=\"button-overlay\" type=\"button\" value=\"Add New Layout\" onClick={addLayoutPrompt} />\n                <input id=\"darkmode_button\" type=\"button\" value=\"Dark Mode\" onClick={darkMode} />\n                <input id=\"button-overlay\" type=\"button\" value=\"Logout\" onClick={logoutHandler} />\n            </Menu>\n\n            {windows.map((windows) => (\n                <CreateWindow\n                    data={windows}\n                    layout={currentLayout}\n                    onDrag={handleDrag}\n                    onClose={handleClose}\n                    onResize={handleResize}\n                ></CreateWindow>\n            ))}\n            {message && <p className=\"message\">{message} </p>}\n        </div>\n    )\n}\n\nexport default Layouts\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}