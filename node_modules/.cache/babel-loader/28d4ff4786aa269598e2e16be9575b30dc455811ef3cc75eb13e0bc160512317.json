{"ast":null,"code":"var _jsxFileName = \"/Users/erik.salsborn/Development/multi-stream/frontend/multistream/src/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport { getToken } from \"./AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  let token = getToken();\n  let location = useLocation();\n  if (!token) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useLocation","Navigate","Outlet","getToken","jsxDEV","_jsxDEV","PrivateRoute","_s","token","location","to","state","from","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/erik.salsborn/Development/multi-stream/frontend/multistream/src/PrivateRoute.js"],"sourcesContent":["import { useLocation, Navigate, Outlet } from \"react-router-dom\"\nimport { getToken } from \"./AuthService\"\n\nconst PrivateRoute = () => {\n    let token = getToken()\n    let location = useLocation()\n\n    if (!token) {\n        // Redirect them to the /login page, but save the current location they were\n        // trying to go to when they were redirected. This allows us to send them\n        // along to that page after they login, which is a nicer user experience\n        // than dropping them off on the home page.\n\n        return <Navigate to=\"/login\" state={{ from: location }} />\n    }\n\n    return <Outlet />\n}\n\nexport default PrivateRoute\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,IAAIC,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACtB,IAAIM,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE5B,IAAI,CAACQ,KAAK,EAAE;IACR;IACA;IACA;IACA;;IAEA,oBAAOH,OAAA,CAACJ,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9D;EAEA,oBAAOX,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB,CAAC;AAAAT,EAAA,CAdKD,YAAY;EAAA,QAECN,WAAW;AAAA;AAAAiB,EAAA,GAFxBX,YAAY;AAgBlB,eAAeA,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}