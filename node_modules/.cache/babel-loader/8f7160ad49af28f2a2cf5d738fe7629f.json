{"ast":null,"code":"var _jsxFileName = \"/Users/erik.salsborn/Development/multistream/frontend/multistream/src/CreateWindow.js\";\nimport { Rnd } from \"react-rnd\"; // function for creating a window-div\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateWindow = _ref => {\n  let {\n    data,\n    layout,\n    onDrag,\n    onClose,\n    onResize\n  } = _ref;\n\n  // checking if layout name matches current selected layout\n  if (data.layout == layout) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Rnd, {\n        size: {\n          width: data.width,\n          height: data.height\n        },\n        position: {\n          x: data.x,\n          y: data.y\n        },\n        onDragStop: (e, d) => {\n          onDrag(data, d.x, d.y);\n        },\n        onResize: (e, direction, ref, delta, position) => {\n          onResize(data, ref.style.width, ref.style.height, position);\n        },\n        onResizeStop: (e, direction, ref, delta, position) => {\n          onResize(data, ref.style.width, ref.style.height, position);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"window\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClose(data),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            className: \"TwitchPlayer\",\n            src: data.url,\n            width: data.width,\n            height: data.height,\n            frameBorder: \"0\",\n            scrolling: \"no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = CreateWindow;\nexport default CreateWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWindow\");","map":{"version":3,"sources":["/Users/erik.salsborn/Development/multistream/frontend/multistream/src/CreateWindow.js"],"names":["Rnd","CreateWindow","data","layout","onDrag","onClose","onResize","width","height","x","y","e","d","direction","ref","delta","position","style","url"],"mappings":";AAAA,SAASA,GAAT,QAAoB,WAApB,C,CAEA;;;;;AAEA,MAAMC,YAAY,GAAG,QAAiD;AAAA,MAAhD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,GAAgD;;AAClE;AACA,MAAIJ,IAAI,CAACC,MAAL,IAAeA,MAAnB,EAA2B;AACvB,wBACI;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,IAAI,EAAE;AAAEI,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAAd;AAAqBC,UAAAA,MAAM,EAAEN,IAAI,CAACM;AAAlC,SADV;AAEI,QAAA,QAAQ,EAAE;AAAEC,UAAAA,CAAC,EAAEP,IAAI,CAACO,CAAV;AAAaC,UAAAA,CAAC,EAAER,IAAI,CAACQ;AAArB,SAFd;AAGI,QAAA,UAAU,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClBR,UAAAA,MAAM,CAACF,IAAD,EAAOU,CAAC,CAACH,CAAT,EAAYG,CAAC,CAACF,CAAd,CAAN;AACH,SALL;AAMI,QAAA,QAAQ,EAAE,CAACC,CAAD,EAAIE,SAAJ,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,QAA3B,KAAwC;AAC9CV,UAAAA,QAAQ,CAACJ,IAAD,EAAOY,GAAG,CAACG,KAAJ,CAAUV,KAAjB,EAAwBO,GAAG,CAACG,KAAJ,CAAUT,MAAlC,EAA0CQ,QAA1C,CAAR;AACH,SARL;AASI,QAAA,YAAY,EAAE,CAACL,CAAD,EAAIE,SAAJ,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,QAA3B,KAAwC;AAClDV,UAAAA,QAAQ,CAACJ,IAAD,EAAOY,GAAG,CAACG,KAAJ,CAAUV,KAAjB,EAAwBO,GAAG,CAACG,KAAJ,CAAUT,MAAlC,EAA0CQ,QAA1C,CAAR;AACH,SAXL;AAAA,+BAaI;AAAK,UAAA,EAAE,EAAC,QAAR;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAE,MAAMX,OAAO,CAACH,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,SAAS,EAAC,cADd;AAEI,YAAA,GAAG,EAAEA,IAAI,CAACgB,GAFd;AAGI,YAAA,KAAK,EAAEhB,IAAI,CAACK,KAHhB;AAII,YAAA,MAAM,EAAEL,IAAI,CAACM,MAJjB;AAKI,YAAA,WAAW,EAAC,GALhB;AAMI,YAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AA6BH;AACJ,CAjCD;;KAAMP,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { Rnd } from \"react-rnd\"\n\n// function for creating a window-div\n\nconst CreateWindow = ({ data, layout, onDrag, onClose, onResize }) => {\n    // checking if layout name matches current selected layout\n    if (data.layout == layout) {\n        return (\n            <>\n                <Rnd\n                    size={{ width: data.width, height: data.height }}\n                    position={{ x: data.x, y: data.y }}\n                    onDragStop={(e, d) => {\n                        onDrag(data, d.x, d.y)\n                    }}\n                    onResize={(e, direction, ref, delta, position) => {\n                        onResize(data, ref.style.width, ref.style.height, position)\n                    }}\n                    onResizeStop={(e, direction, ref, delta, position) => {\n                        onResize(data, ref.style.width, ref.style.height, position)\n                    }}\n                >\n                    <div id=\"window\">\n                        <button onClick={() => onClose(data)}>x</button>\n                        <iframe\n                            className=\"TwitchPlayer\"\n                            src={data.url}\n                            width={data.width}\n                            height={data.height}\n                            frameBorder=\"0\"\n                            scrolling=\"no\"\n                        ></iframe>\n                    </div>\n                </Rnd>\n            </>\n        )\n    }\n}\n\nexport default CreateWindow\n"]},"metadata":{},"sourceType":"module"}